
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/01_manipulating/plot_remove_obs.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_01_manipulating_plot_remove_obs.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_01_manipulating_plot_remove_obs.py:


Remove Observations
===================

This example demonstrates how to remove observations from an
observation sequence and write a new observation sequence file.

.. GENERATED FROM PYTHON SOURCE LINES 11-12

Import the obs_sequence module

.. GENERATED FROM PYTHON SOURCE LINES 12-14

.. code-block:: Python

    import pydartdiags.obs_sequence.obs_sequence as obsq








.. GENERATED FROM PYTHON SOURCE LINES 15-19

Chose an obs_seq file to read.
In this example, we are using a small obs_seq file "obs_seq.final.medium"
that comes with the pyDARTdiags package 
in the data directory, so we ``import os`` to get the path to the file.

.. GENERATED FROM PYTHON SOURCE LINES 19-23

.. code-block:: Python

    import os
    data_dir = os.path.join(os.getcwd(), "../..", "data")
    data_file = os.path.join(data_dir, "obs_seq.final.ascii.medium")








.. GENERATED FROM PYTHON SOURCE LINES 24-25

Read the obs_seq file into an obs_seq object.

.. GENERATED FROM PYTHON SOURCE LINES 25-27

.. code-block:: Python

    obs_seq = obsq.ObsSequence(data_file)








.. GENERATED FROM PYTHON SOURCE LINES 28-29

Take a look at the observation sequence.

.. GENERATED FROM PYTHON SOURCE LINES 29-31

.. code-block:: Python

    obs_seq.df.head()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>obs_num</th>
          <th>observation</th>
          <th>prior_ensemble_mean</th>
          <th>prior_ensemble_spread</th>
          <th>Data_QC</th>
          <th>DART_quality_control</th>
          <th>linked_list</th>
          <th>longitude</th>
          <th>latitude</th>
          <th>vertical</th>
          <th>vert_unit</th>
          <th>type</th>
          <th>metadata</th>
          <th>external_FO</th>
          <th>seconds</th>
          <th>days</th>
          <th>time</th>
          <th>obs_err_var</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>1</td>
          <td>230.16</td>
          <td>231.310652</td>
          <td>0.405191</td>
          <td>1.0</td>
          <td>0.0</td>
          <td>-1           2          -1</td>
          <td>274.460</td>
          <td>40.010</td>
          <td>23950.0</td>
          <td>pressure (Pa)</td>
          <td>ACARS_TEMPERATURE</td>
          <td>[]</td>
          <td>[]</td>
          <td>75603</td>
          <td>153005</td>
          <td>2019-12-01 21:00:03</td>
          <td>1.00</td>
        </tr>
        <tr>
          <th>1</th>
          <td>2</td>
          <td>18.40</td>
          <td>15.720527</td>
          <td>0.630827</td>
          <td>1.0</td>
          <td>0.0</td>
          <td>1           3          -1</td>
          <td>274.460</td>
          <td>40.010</td>
          <td>23950.0</td>
          <td>pressure (Pa)</td>
          <td>ACARS_U_WIND_COMPONENT</td>
          <td>[]</td>
          <td>[]</td>
          <td>75603</td>
          <td>153005</td>
          <td>2019-12-01 21:00:03</td>
          <td>6.25</td>
        </tr>
        <tr>
          <th>2</th>
          <td>3</td>
          <td>1.60</td>
          <td>-4.932073</td>
          <td>0.825899</td>
          <td>1.0</td>
          <td>0.0</td>
          <td>2           4          -1</td>
          <td>274.460</td>
          <td>40.010</td>
          <td>23950.0</td>
          <td>pressure (Pa)</td>
          <td>ACARS_V_WIND_COMPONENT</td>
          <td>[]</td>
          <td>[]</td>
          <td>75603</td>
          <td>153005</td>
          <td>2019-12-01 21:00:03</td>
          <td>6.25</td>
        </tr>
        <tr>
          <th>3</th>
          <td>4</td>
          <td>264.16</td>
          <td>264.060532</td>
          <td>0.035584</td>
          <td>1.0</td>
          <td>0.0</td>
          <td>3           5          -1</td>
          <td>242.628</td>
          <td>34.105</td>
          <td>56260.0</td>
          <td>pressure (Pa)</td>
          <td>ACARS_TEMPERATURE</td>
          <td>[]</td>
          <td>[]</td>
          <td>75603</td>
          <td>153005</td>
          <td>2019-12-01 21:00:03</td>
          <td>1.00</td>
        </tr>
        <tr>
          <th>4</th>
          <td>5</td>
          <td>11.60</td>
          <td>10.134115</td>
          <td>0.063183</td>
          <td>1.0</td>
          <td>0.0</td>
          <td>4           6          -1</td>
          <td>242.628</td>
          <td>34.105</td>
          <td>56260.0</td>
          <td>pressure (Pa)</td>
          <td>ACARS_U_WIND_COMPONENT</td>
          <td>[]</td>
          <td>[]</td>
          <td>75603</td>
          <td>153005</td>
          <td>2019-12-01 21:00:03</td>
          <td>6.25</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 32-33

To count of the number of observations by type, use the groupby method.

.. GENERATED FROM PYTHON SOURCE LINES 33-35

.. code-block:: Python

    obs_seq.df.groupby('type').size()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    type
    ACARS_TEMPERATURE            107
    ACARS_U_WIND_COMPONENT       106
    ACARS_V_WIND_COMPONENT       105
    AIRCRAFT_TEMPERATURE          20
    AIRCRAFT_U_WIND_COMPONENT     20
    AIRCRAFT_V_WIND_COMPONENT     20
    AIRS_SPECIFIC_HUMIDITY        39
    AIRS_TEMPERATURE              81
    GPSRO_REFRACTIVITY           503
    dtype: int64



.. GENERATED FROM PYTHON SOURCE LINES 36-38

Let's remove the 'GPSRO_REFRACTIVITY' observations.
Remove rows where ``'type' == 'GPSRO_REFRACTIVITY'``

.. GENERATED FROM PYTHON SOURCE LINES 38-40

.. code-block:: Python

    obs_seq.df = obs_seq.df[obs_seq.df['type'] != 'GPSRO_REFRACTIVITY']








.. GENERATED FROM PYTHON SOURCE LINES 41-43

Now let's check the number of observations by type again.
For only the 'GPSRO_REFRACTIVITY' observations:

.. GENERATED FROM PYTHON SOURCE LINES 43-46

.. code-block:: Python

    gpsro_count = (obs_seq.df['type'] == 'GPSRO_REFRACTIVITY').sum()
    print(f"Number of observations with type 'GPSRO_REFRACTIVITY': {gpsro_count}")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Number of observations with type 'GPSRO_REFRACTIVITY': 0




.. GENERATED FROM PYTHON SOURCE LINES 47-49

Count the observations by type again. You'll see that the 'GPSRO_REFRACTIVITY' 
observations have been removed from the dataFrame

.. GENERATED FROM PYTHON SOURCE LINES 49-51

.. code-block:: Python

    obs_seq.df.groupby('type').size()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    type
    ACARS_TEMPERATURE            107
    ACARS_U_WIND_COMPONENT       106
    ACARS_V_WIND_COMPONENT       105
    AIRCRAFT_TEMPERATURE          20
    AIRCRAFT_U_WIND_COMPONENT     20
    AIRCRAFT_V_WIND_COMPONENT     20
    AIRS_SPECIFIC_HUMIDITY        39
    AIRS_TEMPERATURE              81
    dtype: int64



.. GENERATED FROM PYTHON SOURCE LINES 52-53

Write the new observation sequence to a file.

.. GENERATED FROM PYTHON SOURCE LINES 53-55

.. code-block:: Python

    obs_seq.write_obs_seq('obs_seq.final.ascii.medium.no_gpsro')








.. GENERATED FROM PYTHON SOURCE LINES 56-56

The new file will not have the 'GPSRO_REFRACTIVITY' observations.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.030 seconds)


.. _sphx_glr_download_examples_01_manipulating_plot_remove_obs.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_remove_obs.ipynb <plot_remove_obs.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_remove_obs.py <plot_remove_obs.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_remove_obs.zip <plot_remove_obs.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
