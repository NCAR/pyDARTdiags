
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/03_diagnostics/plot_evolution.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_03_diagnostics_plot_evolution.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_03_diagnostics_plot_evolution.py:


Plot Evolution
==============

This example demonstrates how to plot the evolution of RMSE, bias, or totalspread.
For an explanation of the statistics calculations see the :ref:`statistics` guide.

.. GENERATED FROM PYTHON SOURCE LINES 10-12

Import the obs_sequence module
and the matplots module for plotting.

.. GENERATED FROM PYTHON SOURCE LINES 12-15

.. code-block:: Python

    import pydartdiags.obs_sequence.obs_sequence as obsq
    from pydartdiags.matplots import matplots as mp








.. GENERATED FROM PYTHON SOURCE LINES 16-21

Chose an obs_seq file to read.
In this example, we are using "obs_seq.final.lorenz_96" which is from
a Lorenz 96 model run with the DART assimilation system.
The obs_seq.final.lorenz_96 file comes with the pyDARTdiags package
in the data directory, so we ``import os`` to get the path to the file.

.. GENERATED FROM PYTHON SOURCE LINES 21-25

.. code-block:: Python

    import os
    data_dir = os.path.join(os.getcwd(), "../..", "data")
    data_file = os.path.join(data_dir, "obs_seq.final.lorenz_96")








.. GENERATED FROM PYTHON SOURCE LINES 26-27

Read the obs_seq file into an obs_seq object.

.. GENERATED FROM PYTHON SOURCE LINES 27-29

.. code-block:: Python

    obs_seq = obsq.obs_sequence(data_file)








.. GENERATED FROM PYTHON SOURCE LINES 30-40

.. code-block:: Python

    fig = mp.plot_evolution(
        obs_seq=obs_seq,
        type="RAW_STATE_VARIABLE",
        time_bin_width="3600s",  # 1-hour bins
        stat="rmse",
        tick_interval=24,
        time_format="%d", # days
        plot_pvu=False
    )




.. image-sg:: /examples/03_diagnostics/images/sphx_glr_plot_evolution_001.png
   :alt: RAW_STATE_VARIABLE
   :srcset: /examples/03_diagnostics/images/sphx_glr_plot_evolution_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 41-43

To plot the bias, set stat="bias". Let's also plot the 
possible vs used observations.

.. GENERATED FROM PYTHON SOURCE LINES 43-53

.. code-block:: Python

    fig = mp.plot_evolution(
        obs_seq=obs_seq,
        type="RAW_STATE_VARIABLE",
        time_bin_width="3600s",  # 1-hour bins
        stat="bias",
        tick_interval=24,
        time_format="%d", # days
        plot_pvu=True
    )




.. image-sg:: /examples/03_diagnostics/images/sphx_glr_plot_evolution_002.png
   :alt: RAW_STATE_VARIABLE
   :srcset: /examples/03_diagnostics/images/sphx_glr_plot_evolution_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 54-58

The legend is being covered by the 'used vs. assimilated' observation count,
so let's move the legend to the lower right corner.
We can do this by accessing the `matplotlib <https://matplotlib.org/stable/>`_
axes object from the figure and using the `legend` method to move the legend. 

.. GENERATED FROM PYTHON SOURCE LINES 58-75

.. code-block:: Python


    fig = mp.plot_evolution(
        obs_seq=obs_seq,
        type="RAW_STATE_VARIABLE",
        time_bin_width="3600s",  # 1-hour bins
        stat="bias",
        tick_interval=24,
        time_format="%d", # days
        plot_pvu=True
    )

    # Get the Axes object from the figure
    ax = fig.axes[0]  # Axis 0 refers to the first Axes object

    # Move the legend to a new location
    legend = ax.legend(loc="lower right")




.. image-sg:: /examples/03_diagnostics/images/sphx_glr_plot_evolution_003.png
   :alt: RAW_STATE_VARIABLE
   :srcset: /examples/03_diagnostics/images/sphx_glr_plot_evolution_003.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.844 seconds)


.. _sphx_glr_download_examples_03_diagnostics_plot_evolution.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_evolution.ipynb <plot_evolution.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_evolution.py <plot_evolution.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_evolution.zip <plot_evolution.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
